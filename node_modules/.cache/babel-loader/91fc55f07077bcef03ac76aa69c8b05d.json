{"ast":null,"code":"var _jsxFileName = \"/Users/tootoo/Desktop/My Computer/Web Development /MY PROJECTS-FRONT END/VidMate/my-react-app/src/components/VideoCard.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography, Card, CardContent, CardMedia } from '@mui/material';\nimport { CheckCircle } from '@mui/icons-material';\nimport { demoThumbnailUrl, demoVideoUrl, demoVideoTitle, demoChannelUrl, demoChannelTitle } from '../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCard = _ref => {\n  var _snippet$thumbnails, _snippet$thumbnails$h;\n  let {\n    video: {\n      id: {\n        videoId\n      },\n      snippet\n    }\n  } = _ref;\n  // console.log(videoId , snippet);\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: {\n        xs: '100%',\n        md: '320px'\n      },\n      BoxShadow: 'none',\n      BorderRadius: '0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: videoId ? `/video/${videoId}` : demoVideoUrl,\n      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n        image: snippet === null || snippet === void 0 ? void 0 : (_snippet$thumbnails = snippet.thumbnails) === null || _snippet$thumbnails === void 0 ? void 0 : (_snippet$thumbnails$h = _snippet$thumbnails.high) === null || _snippet$thumbnails$h === void 0 ? void 0 : _snippet$thumbnails$h.url,\n        alt: snippet === null || snippet === void 0 ? void 0 : snippet.title,\n        sx: {\n          width: {\n            xs: '100%',\n            sm: '350px'\n          },\n          height: 180\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        backgroundColor: '#1e1e1e',\n        height: '160px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: videoId ? `/video/${videoId}` : demoVideoUrl,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          fontWeight: \"bold\",\n          color: \"#FFF\",\n          children: (snippet === null || snippet === void 0 ? void 0 : snippet.title.slice(0, 60)) || demoVideoTitle.slice(0, 60)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: snippet.channelId ? `/channel/${snippet.channelId}` : demoChannelUrl,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          fontWeight: \"bold\",\n          color: \"gray\",\n          children: [(snippet === null || snippet === void 0 ? void 0 : snippet.channelTitle) || demoChannelTitle, /*#__PURE__*/_jsxDEV(CheckCircle, {\n            sx: {\n              fontSize: 12,\n              color: 'gray',\n              ml: '5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = VideoCard;\nexport default VideoCard;\nvar _c;\n$RefreshReg$(_c, \"VideoCard\");","map":{"version":3,"names":["React","Link","Typography","Card","CardContent","CardMedia","CheckCircle","demoThumbnailUrl","demoVideoUrl","demoVideoTitle","demoChannelUrl","demoChannelTitle","VideoCard","video","id","videoId","snippet","width","xs","md","BoxShadow","BorderRadius","thumbnails","high","url","title","sm","height","backgroundColor","slice","channelId","channelTitle","fontSize","color","ml"],"sources":["/Users/tootoo/Desktop/My Computer/Web Development /MY PROJECTS-FRONT END/VidMate/my-react-app/src/components/VideoCard.jsx"],"sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom';\nimport {Typography, Card, CardContent, CardMedia} from '@mui/material';\nimport {CheckCircle} from '@mui/icons-material';\nimport {demoThumbnailUrl , demoVideoUrl, demoVideoTitle,demoChannelUrl,demoChannelTitle} from '../utils/constants';\n\n\nconst VideoCard = ({ video: { id: { videoId }, snippet } })  => {\n    // console.log(videoId , snippet);\n\n  return (\n    <Card sx={{width: { xs: '100%',md : '320px'} ,\n              BoxShadow:'none', \n              BorderRadius: '0'}}>\n        <Link to={videoId ? `/video/${videoId}` : demoVideoUrl}>\n            <CardMedia \n                image={snippet?.thumbnails?.high?.url} \n                alt = {snippet?.title}\n                sx = {{width: {\n                    xs: '100%',\n                    sm: '350px'\n                }, height: 180}}\n            />\n        </Link>\n        <CardContent sx={{backgroundColor: '#1e1e1e', height:'160px'}}>\n            <Link to={videoId ? `/video/${videoId}` : demoVideoUrl}>\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"#FFF\">\n                    {snippet?.title.slice(0,60) || demoVideoTitle.slice(0,60)}\n                </Typography>\n            </Link>\n            <Link to={snippet.channelId ? `/channel/${snippet.channelId}` : demoChannelUrl}>\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"gray\">\n                    {snippet?.channelTitle || demoChannelTitle}\n                    <CheckCircle sx={{ fontSize: 12, color: 'gray',ml:'5px'}} />\n                </Typography>\n            </Link>\n        </CardContent>\n\n    </Card>\n  )\n}\n\nexport default VideoCard"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,QAAO,kBAAkB;AACrC,SAAQC,UAAU,EAAEC,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAO,eAAe;AACtE,SAAQC,WAAW,QAAO,qBAAqB;AAC/C,SAAQC,gBAAgB,EAAGC,YAAY,EAAEC,cAAc,EAACC,cAAc,EAACC,gBAAgB,QAAO,oBAAoB;AAAC;AAGnH,MAAMC,SAAS,GAAG,QAA8C;EAAA;EAAA,IAA7C;IAAEC,KAAK,EAAE;MAAEC,EAAE,EAAE;QAAEC;MAAQ,CAAC;MAAEC;IAAQ;EAAE,CAAC;EACtD;;EAEF,oBACE,QAAC,IAAI;IAAC,EAAE,EAAE;MAACC,KAAK,EAAE;QAAEC,EAAE,EAAE,MAAM;QAACC,EAAE,EAAG;MAAO,CAAC;MAClCC,SAAS,EAAC,MAAM;MAChBC,YAAY,EAAE;IAAG,CAAE;IAAA,wBACzB,QAAC,IAAI;MAAC,EAAE,EAAEN,OAAO,GAAI,UAASA,OAAQ,EAAC,GAAGP,YAAa;MAAA,uBACnD,QAAC,SAAS;QACN,KAAK,EAAEQ,OAAO,aAAPA,OAAO,8CAAPA,OAAO,CAAEM,UAAU,iFAAnB,oBAAqBC,IAAI,0DAAzB,sBAA2BC,GAAI;QACtC,GAAG,EAAIR,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAES,KAAM;QACtB,EAAE,EAAI;UAACR,KAAK,EAAE;YACVC,EAAE,EAAE,MAAM;YACVQ,EAAE,EAAE;UACR,CAAC;UAAEC,MAAM,EAAE;QAAG;MAAE;QAAA;QAAA;QAAA;MAAA;IAClB;MAAA;MAAA;MAAA;IAAA,QACC,eACP,QAAC,WAAW;MAAC,EAAE,EAAE;QAACC,eAAe,EAAE,SAAS;QAAED,MAAM,EAAC;MAAO,CAAE;MAAA,wBAC1D,QAAC,IAAI;QAAC,EAAE,EAAEZ,OAAO,GAAI,UAASA,OAAQ,EAAC,GAAGP,YAAa;QAAA,uBACnD,QAAC,UAAU;UAAC,OAAO,EAAC,WAAW;UAAC,UAAU,EAAC,MAAM;UAAC,KAAK,EAAC,MAAM;UAAA,UACzD,CAAAQ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAES,KAAK,CAACI,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,KAAIpB,cAAc,CAACoB,KAAK,CAAC,CAAC,EAAC,EAAE;QAAC;UAAA;UAAA;UAAA;QAAA;MAChD;QAAA;QAAA;QAAA;MAAA,QACV,eACP,QAAC,IAAI;QAAC,EAAE,EAAEb,OAAO,CAACc,SAAS,GAAI,YAAWd,OAAO,CAACc,SAAU,EAAC,GAAGpB,cAAe;QAAA,uBAC3E,QAAC,UAAU;UAAC,OAAO,EAAC,WAAW;UAAC,UAAU,EAAC,MAAM;UAAC,KAAK,EAAC,MAAM;UAAA,WACzD,CAAAM,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEe,YAAY,KAAIpB,gBAAgB,eAC1C,QAAC,WAAW;YAAC,EAAE,EAAE;cAAEqB,QAAQ,EAAE,EAAE;cAAEC,KAAK,EAAE,MAAM;cAACC,EAAE,EAAC;YAAK;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MACnD;QAAA;QAAA;QAAA;MAAA,QACV;IAAA;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QAEX;AAEX,CAAC;AAAA,KAjCKtB,SAAS;AAmCf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}